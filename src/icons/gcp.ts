// !!! DO NOT EDIT !!! -- automatically generated by scripts/assets.js

const aiplatform = new URL('../../images/gcp/aiplatform.svg', import.meta.url);
const apianalytics = new URL('../../images/gcp/apianalytics.svg', import.meta.url);
const apigeeapiplatform = new URL('../../images/gcp/apigeeapiplatform.svg', import.meta.url);
const apigeesense = new URL('../../images/gcp/apigeesense.svg', import.meta.url);
const apimonetization = new URL('../../images/gcp/apimonetization.svg', import.meta.url);
const apis = new URL('../../images/gcp/apis.svg', import.meta.url);
const appengine = new URL('../../images/gcp/appengine.svg', import.meta.url);
const armor = new URL('../../images/gcp/armor.svg', import.meta.url);
const artifactRegistry = new URL('../../images/gcp/artifact-registry.svg', import.meta.url);
const automl = new URL('../../images/gcp/automl.svg', import.meta.url);
const beyondcorp = new URL('../../images/gcp/beyondcorp.svg', import.meta.url);
const bigquery = new URL('../../images/gcp/bigquery.svg', import.meta.url);
const bigtable = new URL('../../images/gcp/bigtable.svg', import.meta.url);
const build = new URL('../../images/gcp/build.svg', import.meta.url);
const cdn = new URL('../../images/gcp/cdn.svg', import.meta.url);
const cloudDebugger = new URL('../../images/gcp/cloud-debugger.svg', import.meta.url);
const cloudRun = new URL('../../images/gcp/cloud-run.svg', import.meta.url);
const composer = new URL('../../images/gcp/composer.svg', import.meta.url);
const computeEngine = new URL('../../images/gcp/compute-engine.svg', import.meta.url);
const containerOptimizedOs = new URL('../../images/gcp/container-optimized-os.svg', import.meta.url);
const dataCatalog = new URL('../../images/gcp/data-catalog.svg', import.meta.url);
const dataLab = new URL('../../images/gcp/data-lab.svg', import.meta.url);
const dataLossPreventionApi = new URL('../../images/gcp/data-loss-prevention-api.svg', import.meta.url);
const dataStudio = new URL('../../images/gcp/data-studio.svg', import.meta.url);
const dataflow = new URL('../../images/gcp/dataflow.svg', import.meta.url);
const dataprep = new URL('../../images/gcp/dataprep.svg', import.meta.url);
const dataproc = new URL('../../images/gcp/dataproc.svg', import.meta.url);
const datastore = new URL('../../images/gcp/datastore.svg', import.meta.url);
const deploymentManager = new URL('../../images/gcp/deployment-manager.svg', import.meta.url);
const developerPortal = new URL('../../images/gcp/developer-portal.svg', import.meta.url);
const dialogflow = new URL('../../images/gcp/dialogflow.svg', import.meta.url);
const dns = new URL('../../images/gcp/dns.svg', import.meta.url);
const eTpu = new URL('../../images/gcp/e-tpu.svg', import.meta.url);
const endpoints = new URL('../../images/gcp/endpoints.svg', import.meta.url);
const errorReporting = new URL('../../images/gcp/error-reporting.svg', import.meta.url);
const externalIpAddresses = new URL('../../images/gcp/external-ip-addresses.svg', import.meta.url);
const filestore = new URL('../../images/gcp/filestore.svg', import.meta.url);
const firestore = new URL('../../images/gcp/firestore.svg', import.meta.url);
const firewallRules = new URL('../../images/gcp/firewall-rules.svg', import.meta.url);
const functions = new URL('../../images/gcp/functions.svg', import.meta.url);
const generic = new URL('../../images/gcp/generic.svg', import.meta.url);
const genomics = new URL('../../images/gcp/genomics.svg', import.meta.url);
const gke = new URL('../../images/gcp/gke.svg', import.meta.url);
const gkeOnPrem = new URL('../../images/gcp/gke-on-prem.svg', import.meta.url);
const gpu = new URL('../../images/gcp/gpu.svg', import.meta.url);
const iam = new URL('../../images/gcp/iam.svg', import.meta.url);
const interconnect = new URL('../../images/gcp/interconnect.svg', import.meta.url);
const iotCore = new URL('../../images/gcp/iot-core.svg', import.meta.url);
const jobsApi = new URL('../../images/gcp/jobs-api.svg', import.meta.url);
const keyAccessJustifications = new URL('../../images/gcp/key-access-justifications.svg', import.meta.url);
const loadBalancing = new URL('../../images/gcp/load-balancing.svg', import.meta.url);
const logging = new URL('../../images/gcp/logging.svg', import.meta.url);
const memorystore = new URL('../../images/gcp/memorystore.svg', import.meta.url);
const monitoring = new URL('../../images/gcp/monitoring.svg', import.meta.url);
const naturalLanguageApi = new URL('../../images/gcp/natural-language-api.svg', import.meta.url);
const network = new URL('../../images/gcp/network.svg', import.meta.url);
const partnerInterconnect = new URL('../../images/gcp/partner-interconnect.svg', import.meta.url);
const persistentDisk = new URL('../../images/gcp/persistent-disk.svg', import.meta.url);
const premiumNetworkTier = new URL('../../images/gcp/premium-network-tier.svg', import.meta.url);
const pubSub = new URL('../../images/gcp/pub_sub.svg', import.meta.url);
const router = new URL('../../images/gcp/router.svg', import.meta.url);
const routes = new URL('../../images/gcp/routes.svg', import.meta.url);
const securityCommandCenter = new URL('../../images/gcp/security-command-center.svg', import.meta.url);
const spanner = new URL('../../images/gcp/spanner.svg', import.meta.url);
const speechToText = new URL('../../images/gcp/speech-to-text.svg', import.meta.url);
const sql = new URL('../../images/gcp/sql.svg', import.meta.url);
const stackdriver = new URL('../../images/gcp/stackdriver.svg', import.meta.url);
const standardNetworkTier = new URL('../../images/gcp/standard-network-tier.svg', import.meta.url);
const storage = new URL('../../images/gcp/storage.svg', import.meta.url);
const textToSpeech = new URL('../../images/gcp/text-to-speech.svg', import.meta.url);
const toolsForPowershell = new URL('../../images/gcp/tools-for-powershell.svg', import.meta.url);
const trace = new URL('../../images/gcp/trace.svg', import.meta.url);
const transferAppliance = new URL('../../images/gcp/transfer-appliance.svg', import.meta.url);
const translationApi = new URL('../../images/gcp/translation-api.svg', import.meta.url);
const videoIntelligenceApi = new URL('../../images/gcp/video-intelligence-api.svg', import.meta.url);
const virtualPrivateCloud = new URL('../../images/gcp/virtual-private-cloud.svg', import.meta.url);
const visionApi = new URL('../../images/gcp/vision-api.svg', import.meta.url);
const vpn = new URL('../../images/gcp/vpn.svg', import.meta.url);
const webSecurityScanner = new URL('../../images/gcp/web-security-scanner.svg', import.meta.url);

export {
  aiplatform,
  apianalytics,
  apigeeapiplatform,
  apigeesense,
  apimonetization,
  apis,
  appengine,
  armor,
  artifactRegistry,
  automl,
  beyondcorp,
  bigquery,
  bigtable,
  build,
  cdn,
  cloudDebugger,
  cloudRun,
  composer,
  computeEngine,
  containerOptimizedOs,
  dataCatalog,
  dataLab,
  dataLossPreventionApi,
  dataStudio,
  dataflow,
  dataprep,
  dataproc,
  datastore,
  deploymentManager,
  developerPortal,
  dialogflow,
  dns,
  eTpu,
  endpoints,
  errorReporting,
  externalIpAddresses,
  filestore,
  firestore,
  firewallRules,
  functions,
  generic,
  genomics,
  gke,
  gkeOnPrem,
  gpu,
  iam,
  interconnect,
  iotCore,
  jobsApi,
  keyAccessJustifications,
  loadBalancing,
  logging,
  memorystore,
  monitoring,
  naturalLanguageApi,
  network,
  partnerInterconnect,
  persistentDisk,
  premiumNetworkTier,
  pubSub,
  router,
  routes,
  securityCommandCenter,
  spanner,
  speechToText,
  sql,
  stackdriver,
  standardNetworkTier,
  storage,
  textToSpeech,
  toolsForPowershell,
  trace,
  transferAppliance,
  translationApi,
  videoIntelligenceApi,
  virtualPrivateCloud,
  visionApi,
  vpn,
  webSecurityScanner,
};
