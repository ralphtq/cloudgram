// !!! DO NOT EDIT !!! -- automatically generated by scripts/assets.js

const alb = new URL('https://google.com');
const alexaForBusiness = new URL('https://google.com');
const amplifyConsole = new URL('https://google.com');
const apacheMxnet = new URL('https://google.com');
const apiGateway = new URL('https://google.com');
const apiGatewayEndpoint = new URL('https://google.com');
const appConfig = new URL('https://google.com');
const appMesh = new URL('https://google.com');
const appMeshMesh = new URL('https://google.com');
const appMeshVirtualGateway = new URL('https://google.com');
const appMeshVirtualNode = new URL('https://google.com');
const appMeshVirtualRouter = new URL('https://google.com');
const appMeshVirtualService = new URL('https://google.com');
const appStream = new URL('https://google.com');
const appWizard = new URL('https://google.com');
const applicationAutoScaling = new URL('https://google.com');
const applicationDiscoveryService = new URL('https://google.com');
const appsync = new URL('https://google.com');
const artifact = new URL('https://google.com');
const athena = new URL('https://google.com');
const augmentedAiA2I = new URL('https://google.com');
const aurora = new URL('https://google.com');
const auroraInstance = new URL('https://google.com');
const auroraInstanceAlternate = new URL('https://google.com');
const auroraMariadbInstance = new URL('https://google.com');
const auroraMariadbInstanceAlternate = new URL('https://google.com');
const auroraMysqlInstance = new URL('https://google.com');
const auroraMysqlInstanceAlternate = new URL('https://google.com');
const auroraOracleInstance = new URL('https://google.com');
const auroraOracleInstanceAlternate = new URL('https://google.com');
const auroraPiops = new URL('https://google.com');
const auroraPostgresqlInstance = new URL('https://google.com');
const auroraPostgresqlInstanceAlternate = new URL('https://google.com');
const auroraSqlServerInstance = new URL('https://google.com');
const auroraSqlServerInstanceAlternate = new URL('https://google.com');
const autoScaling = new URL('https://google.com');
const backintAgent = new URL('https://google.com');
const backup = new URL('https://google.com');
const batch = new URL('https://google.com');
const bottlerocket = new URL('https://google.com');
const braket = new URL('https://google.com');
const budgets = new URL('https://google.com');
const certificateManager = new URL('https://google.com');
const certificateManagerCertificateAuthority = new URL('https://google.com');
const chatbot = new URL('https://google.com');
const chime = new URL('https://google.com');
const client = new URL('https://google.com');
const cloud9 = new URL('https://google.com');
const cloudDevelopmentKit = new URL('https://google.com');
const cloudDirectory = new URL('https://google.com');
const cloudMapNamespace = new URL('https://google.com');
const cloudMapResource = new URL('https://google.com');
const cloudMapService = new URL('https://google.com');
const cloudTrail = new URL('https://google.com');
const cloudendureDisasterRecovery = new URL('https://google.com');
const cloudendureMigration = new URL('https://google.com');
const cloudformation = new URL('https://google.com');
const cloudformationChangeSet = new URL('https://google.com');
const cloudformationStack = new URL('https://google.com');
const cloudformationTemplate = new URL('https://google.com');
const cloudfront = new URL('https://google.com');
const cloudfrontDownloadDistribution = new URL('https://google.com');
const cloudfrontEdgeLocation = new URL('https://google.com');
const cloudfrontStreamingDistribution = new URL('https://google.com');
const cloudhsm = new URL('https://google.com');
const cloudmap = new URL('https://google.com');
const cloudsearch = new URL('https://google.com');
const cloudsearchSearchDocuments = new URL('https://google.com');
const cloudwatch = new URL('https://google.com');
const cloudwatchAlarm = new URL('https://google.com');
const cloudwatchEventBased = new URL('https://google.com');
const cloudwatchEventTimeBased = new URL('https://google.com');
const cloudwatchLogs = new URL('https://google.com');
const cloudwatchRule = new URL('https://google.com');
const codeartifact = new URL('https://google.com');
const codebuild = new URL('https://google.com');
const codecommit = new URL('https://google.com');
const codedeploy = new URL('https://google.com');
const codeguru = new URL('https://google.com');
const codepipeline = new URL('https://google.com');
const codestar = new URL('https://google.com');
const cognito = new URL('https://google.com');
const commandLineInterface = new URL('https://google.com');
const comprehend = new URL('https://google.com');
const computeOptimizer = new URL('https://google.com');
const config = new URL('https://google.com');
const connect = new URL('https://google.com');
const consoleMobileApplication = new URL('https://google.com');
const controlTower = new URL('https://google.com');
const costAndUsageReport = new URL('https://google.com');
const costExplorer = new URL('https://google.com');
const dataExchange = new URL('https://google.com');
const dataPipeline = new URL('https://google.com');
const dataSync = new URL('https://google.com');
const databaseAmazonRdsProxy = new URL('https://google.com');
const databaseAmazonRdsProxyAlternate = new URL('https://google.com');
const databaseMigration = new URL('https://google.com');
const databaseMigrationWorkflowJob = new URL('https://google.com');
const datasyncAgent = new URL('https://google.com');
const deepComposer = new URL('https://google.com');
const deepLearningAmis = new URL('https://google.com');
const deepLearningContainers = new URL('https://google.com');
const deepLens = new URL('https://google.com');
const deepracer = new URL('https://google.com');
const detective = new URL('https://google.com');
const deviceFarm = new URL('https://google.com');
const directConnect = new URL('https://google.com');
const directConnectGateway = new URL('https://google.com');
const directoryService = new URL('https://google.com');
const directoryServiceAdConnector = new URL('https://google.com');
const directoryServiceAwsManagedMicrosoftAd = new URL('https://google.com');
const directoryServiceSimpleAd = new URL('https://google.com');
const disk = new URL('https://google.com');
const documentdb = new URL('https://google.com');
const dynamodb = new URL('https://google.com');
const dynamodbAmazonDynamodbAccelerator = new URL('https://google.com');
const dynamodbAttribute = new URL('https://google.com');
const dynamodbAttributes = new URL('https://google.com');
const dynamodbGlobalSecondaryIndex = new URL('https://google.com');
const dynamodbItem = new URL('https://google.com');
const dynamodbItems = new URL('https://google.com');
const dynamodbTable = new URL('https://google.com');
const ebs = new URL('https://google.com');
const ebsMultipleVolumes = new URL('https://google.com');
const ebsSnapshot = new URL('https://google.com');
const ebsVolume = new URL('https://google.com');
const ec2 = new URL('https://google.com');
const ec2A1Instance = new URL('https://google.com');
const ec2AmiResource = new URL('https://google.com');
const ec2AutoScaling = new URL('https://google.com');
const ec2AwsInferentia = new URL('https://google.com');
const ec2C4Instance = new URL('https://google.com');
const ec2C5Instance = new URL('https://google.com');
const ec2C5NInstance = new URL('https://google.com');
const ec2C6GInstance = new URL('https://google.com');
const ec2D2Instance = new URL('https://google.com');
const ec2DbInstance = new URL('https://google.com');
const ec2ElasticIpAddress = new URL('https://google.com');
const ec2F1Instance = new URL('https://google.com');
const ec2G3Instance = new URL('https://google.com');
const ec2H1Instance = new URL('https://google.com');
const ec2HmiInstance = new URL('https://google.com');
const ec2I3Instance = new URL('https://google.com');
const ec2ImageBuilder = new URL('https://google.com');
const ec2Instance = new URL('https://google.com');
const ec2InstanceWithCloudwatch = new URL('https://google.com');
const ec2Instances = new URL('https://google.com');
const ec2M4Instance = new URL('https://google.com');
const ec2M5AInstance = new URL('https://google.com');
const ec2M5Instance = new URL('https://google.com');
const ec2M5N = new URL('https://google.com');
const ec2M5NInstance = new URL('https://google.com');
const ec2M6GInstance = new URL('https://google.com');
const ec2P2Instance = new URL('https://google.com');
const ec2P3Instance = new URL('https://google.com');
const ec2R4Instance = new URL('https://google.com');
const ec2R5AInstance = new URL('https://google.com');
const ec2R5Instance = new URL('https://google.com');
const ec2R5N = new URL('https://google.com');
const ec2R5NInstance = new URL('https://google.com');
const ec2R6GInstance = new URL('https://google.com');
const ec2Rescue = new URL('https://google.com');
const ec2SpotInstance = new URL('https://google.com');
const ec2T2Instance = new URL('https://google.com');
const ec2T3Instance = new URL('https://google.com');
const ec2X1EInstance = new URL('https://google.com');
const ec2X1Instance = new URL('https://google.com');
const ec2Z1DInstance = new URL('https://google.com');
const ecr = new URL('https://google.com');
const ecrImage = new URL('https://google.com');
const ecrRegistry = new URL('https://google.com');
const ecs = new URL('https://google.com');
const ecsContainer1 = new URL('https://google.com');
const ecsContainer2 = new URL('https://google.com');
const ecsContainer3 = new URL('https://google.com');
const ecsService = new URL('https://google.com');
const ecsTask = new URL('https://google.com');
const efs = new URL('https://google.com');
const efsFileSystem = new URL('https://google.com');
const elasticBeanstalk = new URL('https://google.com');
const elasticBeanstalkApplication = new URL('https://google.com');
const elasticBeanstalkDeployment = new URL('https://google.com');
const elasticContainerKubernetes = new URL('https://google.com');
const elasticInference = new URL('https://google.com');
const elasticTranscoder = new URL('https://google.com');
const elasticache = new URL('https://google.com');
const elasticacheCacheNode = new URL('https://google.com');
const elasticacheForMemcached = new URL('https://google.com');
const elasticacheForRedis = new URL('https://google.com');
const elasticsearchService = new URL('https://google.com');
const elb = new URL('https://google.com');
const elbClassicLoadBalancer = new URL('https://google.com');
const elementalAppliancesAndSoftware = new URL('https://google.com');
const elementalLink = new URL('https://google.com');
const elementalMediaconnect = new URL('https://google.com');
const elementalMediaconvert = new URL('https://google.com');
const elementalMedialive = new URL('https://google.com');
const elementalMediapackage = new URL('https://google.com');
const elementalMediastore = new URL('https://google.com');
const elementalMediatailor = new URL('https://google.com');
const email = new URL('https://google.com');
const emr = new URL('https://google.com');
const emrCluster = new URL('https://google.com');
const emrEngine = new URL('https://google.com');
const emrEngineMaprM3 = new URL('https://google.com');
const emrEngineMaprM5 = new URL('https://google.com');
const emrEngineMaprM7 = new URL('https://google.com');
const emrHdfsCluster = new URL('https://google.com');
const eventbridge = new URL('https://google.com');
const eventbridgeCustomEventBus = new URL('https://google.com');
const eventbridgeDefaultEventBus = new URL('https://google.com');
const eventbridgeEvent = new URL('https://google.com');
const eventbridgeRule = new URL('https://google.com');
const eventbridgeSaasPartnerEvent = new URL('https://google.com');
const expressWorkflow = new URL('https://google.com');
const fargate = new URL('https://google.com');
const firewall = new URL('https://google.com');
const firewallManager = new URL('https://google.com');
const forecast = new URL('https://google.com');
const forums = new URL('https://google.com');
const fraudDetector = new URL('https://google.com');
const freertos = new URL('https://google.com');
const fsx = new URL('https://google.com');
const fsxForLustre = new URL('https://google.com');
const fsxForWfs = new URL('https://google.com');
const gamelift = new URL('https://google.com');
const general = new URL('https://google.com');
const generalAlternate = new URL('https://google.com');
const genericDatabase = new URL('https://google.com');
const glacier = new URL('https://google.com');
const globalAccelerator = new URL('https://google.com');
const glue = new URL('https://google.com');
const glueCrawler = new URL('https://google.com');
const glueDataCatalog = new URL('https://google.com');
const groundStation = new URL('https://google.com');
const guardduty = new URL('https://google.com');
const iam = new URL('https://google.com');
const iamAccessAnalyzer = new URL('https://google.com');
const iamAddOn = new URL('https://google.com');
const iamDataEncryptionKey = new URL('https://google.com');
const iamEncryptedData = new URL('https://google.com');
const iamLongTermSecurityCredential = new URL('https://google.com');
const iamMfaToken = new URL('https://google.com');
const iamPermissions = new URL('https://google.com');
const iamRole = new URL('https://google.com');
const iamSts = new URL('https://google.com');
const iamStsAlternate = new URL('https://google.com');
const iamTemporarySecurityCredential = new URL('https://google.com');
const infrequentAccessStorageClass = new URL('https://google.com');
const inspector = new URL('https://google.com');
const inspectorAgent = new URL('https://google.com');
const interactiveVideo = new URL('https://google.com');
const internetAlt1 = new URL('https://google.com');
const internetAlt2 = new URL('https://google.com');
const internetGateway = new URL('https://google.com');
const iot1Click = new URL('https://google.com');
const iotAction = new URL('https://google.com');
const iotActuator = new URL('https://google.com');
const iotAlexaEnabledDevice = new URL('https://google.com');
const iotAlexaSkill = new URL('https://google.com');
const iotAlexaVoiceService = new URL('https://google.com');
const iotAnalytics = new URL('https://google.com');
const iotAnalyticsChannel = new URL('https://google.com');
const iotAnalyticsDataSet = new URL('https://google.com');
const iotAnalyticsDataStore = new URL('https://google.com');
const iotAnalyticsNotebook = new URL('https://google.com');
const iotAnalyticsPipeline = new URL('https://google.com');
const iotButton = new URL('https://google.com');
const iotCertificate = new URL('https://google.com');
const iotCore = new URL('https://google.com');
const iotDesiredState = new URL('https://google.com');
const iotDeviceDefender = new URL('https://google.com');
const iotDeviceDefenderIotDeviceJobs = new URL('https://google.com');
const iotDeviceGateway = new URL('https://google.com');
const iotDeviceManagement = new URL('https://google.com');
const iotEcho = new URL('https://google.com');
const iotEvents = new URL('https://google.com');
const iotFireTv = new URL('https://google.com');
const iotFireTvStick = new URL('https://google.com');
const iotGreengrassConnector = new URL('https://google.com');
const iotGreengrassCore = new URL('https://google.com');
const iotHardwareBoard = new URL('https://google.com');
const iotHttp2Protocol = new URL('https://google.com');
const iotHttpProtocol = new URL('https://google.com');
const iotLambdaFunction = new URL('https://google.com');
const iotMqttProtocol = new URL('https://google.com');
const iotOverAirUpdate = new URL('https://google.com');
const iotPolicy = new URL('https://google.com');
const iotReportedState = new URL('https://google.com');
const iotRule = new URL('https://google.com');
const iotSensor = new URL('https://google.com');
const iotServo = new URL('https://google.com');
const iotShadow = new URL('https://google.com');
const iotSimulator = new URL('https://google.com');
const iotSitewise = new URL('https://google.com');
const iotThingBank = new URL('https://google.com');
const iotThingBicycle = new URL('https://google.com');
const iotThingCamera = new URL('https://google.com');
const iotThingCar = new URL('https://google.com');
const iotThingCart = new URL('https://google.com');
const iotThingCoffeePot = new URL('https://google.com');
const iotThingDoorLock = new URL('https://google.com');
const iotThingFactory = new URL('https://google.com');
const iotThingGeneric = new URL('https://google.com');
const iotThingHouse = new URL('https://google.com');
const iotThingLightbulb = new URL('https://google.com');
const iotThingMedicalEmergency = new URL('https://google.com');
const iotThingPoliceEmergency = new URL('https://google.com');
const iotThingThermostat = new URL('https://google.com');
const iotThingTravel = new URL('https://google.com');
const iotThingUtility = new URL('https://google.com');
const iotThingWindfarm = new URL('https://google.com');
const iotThingsGraph = new URL('https://google.com');
const iotTopic = new URL('https://google.com');
const iq = new URL('https://google.com');
const kendra = new URL('https://google.com');
const keyManagementServices = new URL('https://google.com');
const keyspaces = new URL('https://google.com');
const kinesis = new URL('https://google.com');
const kinesisDataAnalytics = new URL('https://google.com');
const kinesisDataStreams = new URL('https://google.com');
const kinesisFirehose = new URL('https://google.com');
const kinesisVideoStreams = new URL('https://google.com');
const lakeFormation = new URL('https://google.com');
const lakeFormationDataLake = new URL('https://google.com');
const lambda = new URL('https://google.com');
const lambdaFunction = new URL('https://google.com');
const lex = new URL('https://google.com');
const licenseManager = new URL('https://google.com');
const lightsail = new URL('https://google.com');
const localZones = new URL('https://google.com');
const lumberyard = new URL('https://google.com');
const macie = new URL('https://google.com');
const managedBlockchain = new URL('https://google.com');
const managedServices = new URL('https://google.com');
const managedStreamingForKafka = new URL('https://google.com');
const managementConsole = new URL('https://google.com');
const marketplace = new URL('https://google.com');
const marketplaceAlternate = new URL('https://google.com');
const migrationHub = new URL('https://google.com');
const mobileClient = new URL('https://google.com');
const mq = new URL('https://google.com');
const multimedia = new URL('https://google.com');
const neptune = new URL('https://google.com');
const neuronMlSdk = new URL('https://google.com');
const nitroEnclaves = new URL('https://google.com');
const nlb = new URL('https://google.com');
const officeBuilding = new URL('https://google.com');
const opsworks = new URL('https://google.com');
const opsworksApps = new URL('https://google.com');
const opsworksDeployments = new URL('https://google.com');
const opsworksInstances = new URL('https://google.com');
const opsworksLayers = new URL('https://google.com');
const opsworksMonitoring = new URL('https://google.com');
const opsworksPermissions = new URL('https://google.com');
const opsworksResources = new URL('https://google.com');
const opsworksStack2 = new URL('https://google.com');
const organizations = new URL('https://google.com');
const organizationsAccount = new URL('https://google.com');
const organizationsOrganizationalUnit = new URL('https://google.com');
const outposts = new URL('https://google.com');
const parallelCluster = new URL('https://google.com');
const personalHealthDashboard = new URL('https://google.com');
const personalize = new URL('https://google.com');
const pinpoint = new URL('https://google.com');
const pinpointJourney = new URL('https://google.com');
const polly = new URL('https://google.com');
const privatelink = new URL('https://google.com');
const professionalServices = new URL('https://google.com');
const quantumLedgerDatabase = new URL('https://google.com');
const quicksight = new URL('https://google.com');
const rds = new URL('https://google.com');
const rdsForVmware = new URL('https://google.com');
const rdsInstance = new URL('https://google.com');
const rdsInstanceAlternate = new URL('https://google.com');
const redshift = new URL('https://google.com');
const redshiftDenseComputeNode = new URL('https://google.com');
const redshiftDenseStorageNode = new URL('https://google.com');
const redshiftct = new URL('https://google.com');
const rekognition = new URL('https://google.com');
const rekognitionImage = new URL('https://google.com');
const rekognitionVideo = new URL('https://google.com');
const reservedInstanceReporting = new URL('https://google.com');
const resourcesAccessManager = new URL('https://google.com');
const robomaker = new URL('https://google.com');
const robomakerCloudExtensionsRos = new URL('https://google.com');
const robomakerDevelopmentEnvironment = new URL('https://google.com');
const robomakerFleetManagement = new URL('https://google.com');
const robomakerSimulation = new URL('https://google.com');
const route53 = new URL('https://google.com');
const route53HostedZone = new URL('https://google.com');
const route53RouteTable = new URL('https://google.com');
const s3 = new URL('https://google.com');
const s3Bucket = new URL('https://google.com');
const s3BucketWithObjects = new URL('https://google.com');
const s3GeneralAccessPoints = new URL('https://google.com');
const s3Glacier = new URL('https://google.com');
const s3GlacierArchive = new URL('https://google.com');
const s3GlacierDeepArchive = new URL('https://google.com');
const s3GlacierVault = new URL('https://google.com');
const s3IntelligentTiering = new URL('https://google.com');
const s3Object = new URL('https://google.com');
const s3OneZoneIa = new URL('https://google.com');
const s3Replication = new URL('https://google.com');
const s3ReplicationTimeControl = new URL('https://google.com');
const s3StandardIa = new URL('https://google.com');
const s3VpcAccessPoints = new URL('https://google.com');
const sagemaker = new URL('https://google.com');
const sagemakerGroundTruth = new URL('https://google.com');
const sagemakerModel = new URL('https://google.com');
const sagemakerNotebook = new URL('https://google.com');
const sagemakerTrain = new URL('https://google.com');
const samlToken = new URL('https://google.com');
const savingsPlans = new URL('https://google.com');
const sdk = new URL('https://google.com');
const secretsManager = new URL('https://google.com');
const securityHub = new URL('https://google.com');
const securityHubFinding = new URL('https://google.com');
const serverMigrationService = new URL('https://google.com');
const serverlessApplicationRepository = new URL('https://google.com');
const serviceCatalog = new URL('https://google.com');
const ses = new URL('https://google.com');
const sesEmail = new URL('https://google.com');
const shield = new URL('https://google.com');
const shieldAdvanced = new URL('https://google.com');
const singleSignOn = new URL('https://google.com');
const siteToSiteVpn = new URL('https://google.com');
const snowball = new URL('https://google.com');
const snowballEdge = new URL('https://google.com');
const snowballImportExport = new URL('https://google.com');
const snowcone = new URL('https://google.com');
const snowmobile = new URL('https://google.com');
const sns = new URL('https://google.com');
const snsEmailNotification = new URL('https://google.com');
const snsHttpNotification = new URL('https://google.com');
const snsTopic = new URL('https://google.com');
const sqs = new URL('https://google.com');
const sqsMessage = new URL('https://google.com');
const sqsQueue = new URL('https://google.com');
const sslPadlock = new URL('https://google.com');
const standardStorageClass = new URL('https://google.com');
const stepFunctions = new URL('https://google.com');
const storageGateway = new URL('https://google.com');
const storageGatewayCachedVolume = new URL('https://google.com');
const storageGatewayFileGateway = new URL('https://google.com');
const storageGatewayNonCachedVolume = new URL('https://google.com');
const storageGatewayTapeGateway = new URL('https://google.com');
const storageGatewayVirtualTapeLibrary = new URL('https://google.com');
const storageGatewayVolumeGateway = new URL('https://google.com');
const sumerian = new URL('https://google.com');
const support = new URL('https://google.com');
const systemManagerAutomation = new URL('https://google.com');
const systemManagerDocuments = new URL('https://google.com');
const systemManagerInventory = new URL('https://google.com');
const systemManagerMaintenanceWindows = new URL('https://google.com');
const systemManagerOpscenter = new URL('https://google.com');
const systemManagerParameterStore = new URL('https://google.com');
const systemManagerPatchManager = new URL('https://google.com');
const systemManagerRunCommand = new URL('https://google.com');
const systemManagerStateManager = new URL('https://google.com');
const systemsManager = new URL('https://google.com');
const tapeStorage = new URL('https://google.com');
const tensorflowOnAws = new URL('https://google.com');
const textract = new URL('https://google.com');
const thinkboxDeadline = new URL('https://google.com');
const thinkboxFrost = new URL('https://google.com');
const thinkboxKrakatoa = new URL('https://google.com');
const thinkboxSequoia = new URL('https://google.com');
const thinkboxStoke = new URL('https://google.com');
const thinkboxXmesh = new URL('https://google.com');
const timestream = new URL('https://google.com');
const toolkit = new URL('https://google.com');
const toolsAndSdk = new URL('https://google.com');
const torchserve = new URL('https://google.com');
const traditionalServer = new URL('https://google.com');
const trainingCertification = new URL('https://google.com');
const transcribe = new URL('https://google.com');
const transferFamily = new URL('https://google.com');
const transferFamilyAwsFtp = new URL('https://google.com');
const transferFamilyAwsFtps = new URL('https://google.com');
const transferFamilyAwsSftp = new URL('https://google.com');
const transitGateway = new URL('https://google.com');
const translate = new URL('https://google.com');
const trustedAdvisor = new URL('https://google.com');
const trustedAdvisorChecklist = new URL('https://google.com');
const trustedAdvisorChecklistCost = new URL('https://google.com');
const trustedAdvisorChecklistFaultTolerant = new URL('https://google.com');
const trustedAdvisorChecklistPerformance = new URL('https://google.com');
const trustedAdvisorChecklistSecurity = new URL('https://google.com');
const user = new URL('https://google.com');
const users = new URL('https://google.com');
const virtualPrivateCloud = new URL('https://google.com');
const vmwareCloudOnAws = new URL('https://google.com');
const vpcCustomerGateway = new URL('https://google.com');
const vpcElasticNetworkAdapter = new URL('https://google.com');
const vpcElasticNetworkInterface = new URL('https://google.com');
const vpcEndpoints = new URL('https://google.com');
const vpcFlowLogs = new URL('https://google.com');
const vpcInternetGateway = new URL('https://google.com');
const vpcNatGateway = new URL('https://google.com');
const vpcNetworkAccessControlList = new URL('https://google.com');
const vpcPeeringConnection = new URL('https://google.com');
const vpcRouter = new URL('https://google.com');
const vpcTrafficMirroring = new URL('https://google.com');
const vpcVpnConnection = new URL('https://google.com');
const vpcVpnGateway = new URL('https://google.com');
const vpn = new URL('https://google.com');
const waf = new URL('https://google.com');
const wafFilteringRule = new URL('https://google.com');
const wavelength = new URL('https://google.com');
const wellArchitectTool = new URL('https://google.com');
const workdocs = new URL('https://google.com');
const worklink = new URL('https://google.com');
const workmail = new URL('https://google.com');
const workspaces = new URL('https://google.com');
const xRay = new URL('https://google.com');

export {
  alb,
  alexaForBusiness,
  amplifyConsole,
  apacheMxnet,
  apiGateway,
  apiGatewayEndpoint,
  appConfig,
  appMesh,
  appMeshMesh,
  appMeshVirtualGateway,
  appMeshVirtualNode,
  appMeshVirtualRouter,
  appMeshVirtualService,
  appStream,
  appWizard,
  applicationAutoScaling,
  applicationDiscoveryService,
  appsync,
  artifact,
  athena,
  augmentedAiA2I,
  aurora,
  auroraInstance,
  auroraInstanceAlternate,
  auroraMariadbInstance,
  auroraMariadbInstanceAlternate,
  auroraMysqlInstance,
  auroraMysqlInstanceAlternate,
  auroraOracleInstance,
  auroraOracleInstanceAlternate,
  auroraPiops,
  auroraPostgresqlInstance,
  auroraPostgresqlInstanceAlternate,
  auroraSqlServerInstance,
  auroraSqlServerInstanceAlternate,
  autoScaling,
  backintAgent,
  backup,
  batch,
  bottlerocket,
  braket,
  budgets,
  certificateManager,
  certificateManagerCertificateAuthority,
  chatbot,
  chime,
  client,
  cloud9,
  cloudDevelopmentKit,
  cloudDirectory,
  cloudMapNamespace,
  cloudMapResource,
  cloudMapService,
  cloudTrail,
  cloudendureDisasterRecovery,
  cloudendureMigration,
  cloudformation,
  cloudformationChangeSet,
  cloudformationStack,
  cloudformationTemplate,
  cloudfront,
  cloudfrontDownloadDistribution,
  cloudfrontEdgeLocation,
  cloudfrontStreamingDistribution,
  cloudhsm,
  cloudmap,
  cloudsearch,
  cloudsearchSearchDocuments,
  cloudwatch,
  cloudwatchAlarm,
  cloudwatchEventBased,
  cloudwatchEventTimeBased,
  cloudwatchLogs,
  cloudwatchRule,
  codeartifact,
  codebuild,
  codecommit,
  codedeploy,
  codeguru,
  codepipeline,
  codestar,
  cognito,
  commandLineInterface,
  comprehend,
  computeOptimizer,
  config,
  connect,
  consoleMobileApplication,
  controlTower,
  costAndUsageReport,
  costExplorer,
  dataExchange,
  dataPipeline,
  dataSync,
  databaseAmazonRdsProxy,
  databaseAmazonRdsProxyAlternate,
  databaseMigration,
  databaseMigrationWorkflowJob,
  datasyncAgent,
  deepComposer,
  deepLearningAmis,
  deepLearningContainers,
  deepLens,
  deepracer,
  detective,
  deviceFarm,
  directConnect,
  directConnectGateway,
  directoryService,
  directoryServiceAdConnector,
  directoryServiceAwsManagedMicrosoftAd,
  directoryServiceSimpleAd,
  disk,
  documentdb,
  dynamodb,
  dynamodbAmazonDynamodbAccelerator,
  dynamodbAttribute,
  dynamodbAttributes,
  dynamodbGlobalSecondaryIndex,
  dynamodbItem,
  dynamodbItems,
  dynamodbTable,
  ebs,
  ebsMultipleVolumes,
  ebsSnapshot,
  ebsVolume,
  ec2,
  ec2A1Instance,
  ec2AmiResource,
  ec2AutoScaling,
  ec2AwsInferentia,
  ec2C4Instance,
  ec2C5Instance,
  ec2C5NInstance,
  ec2C6GInstance,
  ec2D2Instance,
  ec2DbInstance,
  ec2ElasticIpAddress,
  ec2F1Instance,
  ec2G3Instance,
  ec2H1Instance,
  ec2HmiInstance,
  ec2I3Instance,
  ec2ImageBuilder,
  ec2Instance,
  ec2InstanceWithCloudwatch,
  ec2Instances,
  ec2M4Instance,
  ec2M5AInstance,
  ec2M5Instance,
  ec2M5N,
  ec2M5NInstance,
  ec2M6GInstance,
  ec2P2Instance,
  ec2P3Instance,
  ec2R4Instance,
  ec2R5AInstance,
  ec2R5Instance,
  ec2R5N,
  ec2R5NInstance,
  ec2R6GInstance,
  ec2Rescue,
  ec2SpotInstance,
  ec2T2Instance,
  ec2T3Instance,
  ec2X1EInstance,
  ec2X1Instance,
  ec2Z1DInstance,
  ecr,
  ecrImage,
  ecrRegistry,
  ecs,
  ecsContainer1,
  ecsContainer2,
  ecsContainer3,
  ecsService,
  ecsTask,
  efs,
  efsFileSystem,
  elasticBeanstalk,
  elasticBeanstalkApplication,
  elasticBeanstalkDeployment,
  elasticContainerKubernetes,
  elasticInference,
  elasticTranscoder,
  elasticache,
  elasticacheCacheNode,
  elasticacheForMemcached,
  elasticacheForRedis,
  elasticsearchService,
  elb,
  elbClassicLoadBalancer,
  elementalAppliancesAndSoftware,
  elementalLink,
  elementalMediaconnect,
  elementalMediaconvert,
  elementalMedialive,
  elementalMediapackage,
  elementalMediastore,
  elementalMediatailor,
  email,
  emr,
  emrCluster,
  emrEngine,
  emrEngineMaprM3,
  emrEngineMaprM5,
  emrEngineMaprM7,
  emrHdfsCluster,
  eventbridge,
  eventbridgeCustomEventBus,
  eventbridgeDefaultEventBus,
  eventbridgeEvent,
  eventbridgeRule,
  eventbridgeSaasPartnerEvent,
  expressWorkflow,
  fargate,
  firewall,
  firewallManager,
  forecast,
  forums,
  fraudDetector,
  freertos,
  fsx,
  fsxForLustre,
  fsxForWfs,
  gamelift,
  general,
  generalAlternate,
  genericDatabase,
  glacier,
  globalAccelerator,
  glue,
  glueCrawler,
  glueDataCatalog,
  groundStation,
  guardduty,
  iam,
  iamAccessAnalyzer,
  iamAddOn,
  iamDataEncryptionKey,
  iamEncryptedData,
  iamLongTermSecurityCredential,
  iamMfaToken,
  iamPermissions,
  iamRole,
  iamSts,
  iamStsAlternate,
  iamTemporarySecurityCredential,
  infrequentAccessStorageClass,
  inspector,
  inspectorAgent,
  interactiveVideo,
  internetAlt1,
  internetAlt2,
  internetGateway,
  iot1Click,
  iotAction,
  iotActuator,
  iotAlexaEnabledDevice,
  iotAlexaSkill,
  iotAlexaVoiceService,
  iotAnalytics,
  iotAnalyticsChannel,
  iotAnalyticsDataSet,
  iotAnalyticsDataStore,
  iotAnalyticsNotebook,
  iotAnalyticsPipeline,
  iotButton,
  iotCertificate,
  iotCore,
  iotDesiredState,
  iotDeviceDefender,
  iotDeviceDefenderIotDeviceJobs,
  iotDeviceGateway,
  iotDeviceManagement,
  iotEcho,
  iotEvents,
  iotFireTv,
  iotFireTvStick,
  iotGreengrassConnector,
  iotGreengrassCore,
  iotHardwareBoard,
  iotHttp2Protocol,
  iotHttpProtocol,
  iotLambdaFunction,
  iotMqttProtocol,
  iotOverAirUpdate,
  iotPolicy,
  iotReportedState,
  iotRule,
  iotSensor,
  iotServo,
  iotShadow,
  iotSimulator,
  iotSitewise,
  iotThingBank,
  iotThingBicycle,
  iotThingCamera,
  iotThingCar,
  iotThingCart,
  iotThingCoffeePot,
  iotThingDoorLock,
  iotThingFactory,
  iotThingGeneric,
  iotThingHouse,
  iotThingLightbulb,
  iotThingMedicalEmergency,
  iotThingPoliceEmergency,
  iotThingThermostat,
  iotThingTravel,
  iotThingUtility,
  iotThingWindfarm,
  iotThingsGraph,
  iotTopic,
  iq,
  kendra,
  keyManagementServices,
  keyspaces,
  kinesis,
  kinesisDataAnalytics,
  kinesisDataStreams,
  kinesisFirehose,
  kinesisVideoStreams,
  lakeFormation,
  lakeFormationDataLake,
  lambda,
  lambdaFunction,
  lex,
  licenseManager,
  lightsail,
  localZones,
  lumberyard,
  macie,
  managedBlockchain,
  managedServices,
  managedStreamingForKafka,
  managementConsole,
  marketplace,
  marketplaceAlternate,
  migrationHub,
  mobileClient,
  mq,
  multimedia,
  neptune,
  neuronMlSdk,
  nitroEnclaves,
  nlb,
  officeBuilding,
  opsworks,
  opsworksApps,
  opsworksDeployments,
  opsworksInstances,
  opsworksLayers,
  opsworksMonitoring,
  opsworksPermissions,
  opsworksResources,
  opsworksStack2,
  organizations,
  organizationsAccount,
  organizationsOrganizationalUnit,
  outposts,
  parallelCluster,
  personalHealthDashboard,
  personalize,
  pinpoint,
  pinpointJourney,
  polly,
  privatelink,
  professionalServices,
  quantumLedgerDatabase,
  quicksight,
  rds,
  rdsForVmware,
  rdsInstance,
  rdsInstanceAlternate,
  redshift,
  redshiftDenseComputeNode,
  redshiftDenseStorageNode,
  redshiftct,
  rekognition,
  rekognitionImage,
  rekognitionVideo,
  reservedInstanceReporting,
  resourcesAccessManager,
  robomaker,
  robomakerCloudExtensionsRos,
  robomakerDevelopmentEnvironment,
  robomakerFleetManagement,
  robomakerSimulation,
  route53,
  route53HostedZone,
  route53RouteTable,
  s3,
  s3Bucket,
  s3BucketWithObjects,
  s3GeneralAccessPoints,
  s3Glacier,
  s3GlacierArchive,
  s3GlacierDeepArchive,
  s3GlacierVault,
  s3IntelligentTiering,
  s3Object,
  s3OneZoneIa,
  s3Replication,
  s3ReplicationTimeControl,
  s3StandardIa,
  s3VpcAccessPoints,
  sagemaker,
  sagemakerGroundTruth,
  sagemakerModel,
  sagemakerNotebook,
  sagemakerTrain,
  samlToken,
  savingsPlans,
  sdk,
  secretsManager,
  securityHub,
  securityHubFinding,
  serverMigrationService,
  serverlessApplicationRepository,
  serviceCatalog,
  ses,
  sesEmail,
  shield,
  shieldAdvanced,
  singleSignOn,
  siteToSiteVpn,
  snowball,
  snowballEdge,
  snowballImportExport,
  snowcone,
  snowmobile,
  sns,
  snsEmailNotification,
  snsHttpNotification,
  snsTopic,
  sqs,
  sqsMessage,
  sqsQueue,
  sslPadlock,
  standardStorageClass,
  stepFunctions,
  storageGateway,
  storageGatewayCachedVolume,
  storageGatewayFileGateway,
  storageGatewayNonCachedVolume,
  storageGatewayTapeGateway,
  storageGatewayVirtualTapeLibrary,
  storageGatewayVolumeGateway,
  sumerian,
  support,
  systemManagerAutomation,
  systemManagerDocuments,
  systemManagerInventory,
  systemManagerMaintenanceWindows,
  systemManagerOpscenter,
  systemManagerParameterStore,
  systemManagerPatchManager,
  systemManagerRunCommand,
  systemManagerStateManager,
  systemsManager,
  tapeStorage,
  tensorflowOnAws,
  textract,
  thinkboxDeadline,
  thinkboxFrost,
  thinkboxKrakatoa,
  thinkboxSequoia,
  thinkboxStoke,
  thinkboxXmesh,
  timestream,
  toolkit,
  toolsAndSdk,
  torchserve,
  traditionalServer,
  trainingCertification,
  transcribe,
  transferFamily,
  transferFamilyAwsFtp,
  transferFamilyAwsFtps,
  transferFamilyAwsSftp,
  transitGateway,
  translate,
  trustedAdvisor,
  trustedAdvisorChecklist,
  trustedAdvisorChecklistCost,
  trustedAdvisorChecklistFaultTolerant,
  trustedAdvisorChecklistPerformance,
  trustedAdvisorChecklistSecurity,
  user,
  users,
  virtualPrivateCloud,
  vmwareCloudOnAws,
  vpcCustomerGateway,
  vpcElasticNetworkAdapter,
  vpcElasticNetworkInterface,
  vpcEndpoints,
  vpcFlowLogs,
  vpcInternetGateway,
  vpcNatGateway,
  vpcNetworkAccessControlList,
  vpcPeeringConnection,
  vpcRouter,
  vpcTrafficMirroring,
  vpcVpnConnection,
  vpcVpnGateway,
  vpn,
  waf,
  wafFilteringRule,
  wavelength,
  wellArchitectTool,
  workdocs,
  worklink,
  workmail,
  workspaces,
  xRay,
};
